name: Deploy_Domain

on:
  push:
    paths:
      - ./client/deployment
  pull_request:
    paths:
      - ./client/deployment
defaults:
  run:
    working-directory: ./client/deployment

jobs:
  deploy_client:
    name: Deploy Client
    env:
      TF_VAR_AWS_DEV_REGION: ${{ secrets.AWS_DEV_REGION }}
      TF_VAR_PLAYGROUND_ACCOUNT_ID: ${{ secrets.PLAYGROUND_ACCOUNT_ID }}
      TF_VAR_AWS_STAGING_DOMAIN: ${{secrets.S3_STAGING_DOMAIN_NAME}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.7

      - name: Build
        uses: actions/setup-node@v2
        with:
          path: ./client
      - run: |
          npm install
          yarn build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Cache Terraform
        uses: actions/cache@v2
        with:
          path: ./client/.terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: ${{ runner.os }}-terraform-

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        continue-on-error: false

      - name: Terraform Plan
        id: plan
        run: terraform plan -out plan.tfplan -no-color -input=false -replace="aws_instance.walking_skeleton"
        continue-on-error: false

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -input=false plan.tfplan
        continue-on-error: false