service: skillset-infrastructure

custom:
  profilesTable: 'profilesTable-${sls:stage}'
  dynamodb:
    start:
      seed: true
    stages:
      - dev
    deletionPolicy:
      dev: Delete
      staging: Delete
      production: Delete
    seed:
      domain:
        sources:
          - table: ${self:custom.profilesTable}
            sources: [ ./src/profile/repository/profiles.json ]
  seed:
    profiles:
      table: ${self:custom.profilesTable}
      sources:
        - src/profile/repository/profiles.json

provider:
  name: aws
  runtime: nodejs14.x
  environment:
    PROFILES_TABLE: ${self:custom.profilesTable}
    STAGE: ${sls:stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource:
            - Fn::GetAtt: [ ProfilesTable, Arn ]

plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-seed
  - serverless-dynamodb-local
  - serverless-offline

functions:
  searchProfiles:
    handler: src/profile/handler.search
    events:
      - http:
          path: profile/all
          method: get
          authorizer: authorise
          cors: true
  getProfile:
    handler: src/profile/handler.get
    events:
      - http:
          path: profile/{email}
          method: get
          authorizer: authorise
          cors: true
  saveProfile:
    handler: src/profile/handler.save
    events:
      - http:
          path: profile
          method: put
          authorizer: authorise
          cors: true
  authorise:
    handler: src/authorisation/handler.authorise

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    ProfilesTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: ${self:custom.dynamodb.deletionPolicy.${sls:stage}}
      Properties:
        TableName: ${self:custom.profilesTable}
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1